# Options
unbind C-b
set -g prefix C-a
setw -g mode-keys vi

set -g default-terminal "screen-256color"
set -g mouse on
set -g base-index 1
set -g detach-on-destroy off
set -g renumber-windows on
set -g history-limit 999999
set -g focus-events on
set -sg escape-time 0
setw -g alternate-screen on
setw -g aggressive-resize on
setw -g mode-keys vi
setw -g xterm-keys on
unbind -T copy-mode-vi MouseDragEnd1Pane

# Bindings
bind M switch -t main
bind r source-file ~/.tmux.conf
bind c new-window -c '#{pane_current_path}'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind { swap-window -t -1
bind } swap-window -t +1
bind p select-window -t -1
bind n select-window -t +1
bind = select-layout even-horizontal
bind + select-layout even-vertical
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?g?vim?x?(.bin)?)(diff)?$'"
bind-key -n C-h     if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j     if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k     if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l     if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-Space select-pane -l
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
 
# Jump to previous prompt
bind-key > copy-mode \; send-keys -X start-of-line \; send-keys -X search-backward "‚ùØ"
 
# Select last line
bind-key " " copy-mode \; send-keys -X start-of-line \; send-keys -X search-backward ' ' \; send-keys -X start-of-line \; send-keys jvGk \; send -X end-of-line \; send-keys h
 
# Status line
bind-key S set -g status
STATUS_BG='#555555'
STATUS_FG=black
#set-option -g status-position top
set -g status-justify right
# Blank
setw -g status-bg $STATUS_FG
# Left
setw -g status-left ""
#setw -g status-left-fg $STATUS_FG
#setw -g status-left-bg $STATUS_BG
setw -g status-left-length 1000
# Window
setw -g window-status-current-format "#[fg=black,bg=cyan] #W#{?window_zoomed_flag,., }"
#setw -g window-status-current-fg $STATUS_FG
#setw -g window-status-current-bg $STATUS_BG
# Windows
setw -g window-status-format ' #W#[fg=cyan]#{?window_zoomed_flag,., }'
#setw -g window-status-fg $STATUS_BG
#setw -g window-status-bg $STATUS_FG
# Right
setw -g status-right ""
#setw -g status-right-bg $STATUS_FG
#setw -g status-right-fg $STATUS_BG
 
# Highlight
#setw -g mode-style fg=$STATUS_FG
#set-window-option -g mode-fg '#888888'
#set-window-option -g mode-bg '#444444'
 
# Lines
LINE_COLOR='#444444'
#set -g pane-border-fg $LINE_COLOR
#set -g pane-border-bg default
#set -g pane-active-border-fg $LINE_COLOR
#set -g pane-active-border-bg default
 
# Automatically hide the status bar when only one window is present
                                       #if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
  #set-hook -g window-linked           'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
  #set-hook -g window-unlinked         'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
  #set-hook -g client-session-changed  'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
 
# Clear the left status when exiting a pane
set-hook -g pane-focus-out 'set -w status-left ""'
 
# Clipboard
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
 
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-sessionist'
run '~/.tmux/plugins/tpm/tpm'
